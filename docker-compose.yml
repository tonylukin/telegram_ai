services:
  fastapi:
    image: tonylukin/telegram_ai:latest
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "8000:8000"
    env_file:
      - .env
    volumes:
      - ./sessions:/app/sessions
      - ./logs:/app/logs
      - ./data:/app/data
      - ./app/configs/settings.local.json:/app/app/configs/settings.local.json
    depends_on:
      - db

  human_scanner_bot:
    image: tonylukin/telegram_ai:human_scanner_bot
    build:
      context: .
      dockerfile: human_scanner_bot.dockerfile
    env_file:
        - .env
    volumes:
      - ./sessions:/app/sessions
    depends_on:
      - db

  db:
    image: postgres:14
    env_file:
      - .env
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    ports:
      - "5439:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data

  rabbitmq:
    image: rabbitmq:3-management
    ports:
      - "5677:5672"   # AMQP
      - "15677:15672" # Web UI
    environment:
      RABBITMQ_DEFAULT_USER: ${RABBITMQ_USER}
      RABBITMQ_DEFAULT_PASS: ${RABBITMQ_PASSWORD}
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq

  human_scanner_consumer:
    image: tonylukin/telegram_ai:human_scanner_bot
    build:
      context: .
      dockerfile: human_scanner_bot.dockerfile
    env_file:
      - .env
    command: python3 app/consumers/human_scanner_consumer.py
    depends_on:
      - db
      - rabbitmq

  tiktok_human_scanner_consumer:
    image: tonylukin/telegram_ai:human_scanner_bot
    build:
      context: .
      dockerfile: human_scanner_bot.dockerfile
    env_file:
      - .env
    command: python3 app/consumers/tiktok_human_scanner_consumer.py
    depends_on:
      - db
      - rabbitmq

  instagram_human_scanner_consumer:
    image: tonylukin/telegram_ai:human_scanner_bot
    build:
      context: .
      dockerfile: human_scanner_bot.dockerfile
    env_file:
      - .env
    command: python3 app/consumers/instagram_human_scanner_consumer.py
    depends_on:
      - db
      - rabbitmq

volumes:
  pgdata:
  rabbitmq_data:
